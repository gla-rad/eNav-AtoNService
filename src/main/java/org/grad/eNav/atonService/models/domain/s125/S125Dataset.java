/*
 * Copyright (c) 2022 GLA Research and Development Directorate
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.grad.eNav.atonService.models.domain.s125;

import org.locationtech.jts.geom.Geometry;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;

import javax.persistence.*;
import java.math.BigInteger;
import java.time.LocalDateTime;
import java.util.Date;

/**
 * The S-125 Dataset Entity Class
 * <p>
 * This class is used to map the fixed datasets defined for the S-125 Aids to
 * Navigation entries. Potentially they could be autogenerated but users should
 * also be able to edit them. Datasets reference a specific geometry which will
 * then be used to map all the contained Aids to Navigation to each dataset.
 *
 * @author Nikolaos Vastardis (email: Nikolaos.Vastardis@gla-rad.org)
 */
@Entity
public class S125Dataset {

    // Class Variables
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "dataset_generator")
    @SequenceGenerator(name="dataset_generator", sequenceName = "dataset_generator_seq", allocationSize=1)
    private BigInteger id;

    @OneToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "dataset_identification_id", referencedColumnName = "id")
    private S125DataSetIdentification datasetIdentificationInformation;

    private Geometry geometry;

    @CreatedDate
    private LocalDateTime createdAt;

    @LastModifiedDate
    private Date lastUpdatedAt;

    /**
     * Instantiates a new Dataset.
     */
    public S125Dataset() {

    }

    /**
     * Instantiates a new Dataset.
     *
     * @param datasetFileIdentifier the dataset file identifier
     */
    public S125Dataset(String datasetFileIdentifier) {
        this.datasetIdentificationInformation = new S125DataSetIdentification(datasetFileIdentifier);
    }


    /**
     * Gets id.
     *
     * @return the id
     */
    public BigInteger getId() {
        return id;
    }

    /**
     * Sets id.
     *
     * @param id the id
     */
    public void setId(BigInteger id) {
        this.id = id;
    }

    /**
     * Gets dataset identification information.
     *
     * @return the dataset identification information
     */
    public S125DataSetIdentification getDatasetIdentificationInformation() {
        return datasetIdentificationInformation;
    }

    /**
     * Sets dataset identification information.
     *
     * @param datasetIdentificationInformation the dataset identification information
     */
    public void setDatasetIdentificationInformation(S125DataSetIdentification datasetIdentificationInformation) {
        this.datasetIdentificationInformation = datasetIdentificationInformation;
    }

    /**
     * Gets geometry.
     *
     * @return the geometry
     */
    public Geometry getGeometry() {
        return geometry;
    }

    /**
     * Sets geometry.
     *
     * @param geometry the geometry
     */
    public void setGeometry(Geometry geometry) {
        this.geometry = geometry;
    }

    /**
     * Gets created at.
     *
     * @return the created at
     */
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Sets created at.
     *
     * @param createdAt the created at
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Gets last updated at.
     *
     * @return the last updated at
     */
    public Date getLastUpdatedAt() {
        return lastUpdatedAt;
    }

    /**
     * Sets last updated at.
     *
     * @param lastUpdatedAt the last updated at
     */
    public void setLastUpdatedAt(Date lastUpdatedAt) {
        this.lastUpdatedAt = lastUpdatedAt;
    }
}
